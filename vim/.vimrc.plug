" ABDALROHMAN N <abdd199719@gmail.com>
"         _
" __   __(_)_ __ ___
" \ \ / /| |  _   _ \
"  \ V / | | | | | | |
"   \_/  |_|_| |_| |_|
"            
"
" Environment {
    " Basics {
        set nocompatible        " Must be first line
        set background=dark     " Assume a dark background
    " }
" }

call plug#begin('~/.vim/plugged')

" Deps {
    Plug 'MarcWeber/vim-addon-mw-utils'
    Plug 'tomtom/tlib_vim'
    if executable('ag') || executable('rg')
        Plug 'mileszs/ack.vim'
        if executable('ag')
            let g:ackprg = 'ag --nogroup --nocolor --column --smart-case'
        elseif executable('rg')
            let g:ackprg = 'rg --vimgrep --no-heading'
        endif
    elseif executable('ack-grep')
        let g:ackprg="ack-grep -H --nocolor --nogroup --column"
        Plug 'mileszs/ack.vim'
    elseif executable('ack')
        Plug 'mileszs/ack.vim'
    endif
" }

" Theme {
    Plug 'altercation/vim-colors-solarized'
    Plug 'powerline/fonts'
    Plug 'liuchengxu/space-vim-dark'
    Plug 'flazz/vim-colorschemes'
" }

" General {
    Plug 'junegunn/fzf',{ 'dir': '~/.fzf', 'do': './install --all'  }
    Plug 'junegunn/fzf.vim'
    Plug 'tpope/vim-surround'
    Plug 'tpope/vim-repeat'
    Plug 'rhysd/conflict-marker.vim'
    Plug 'jiangmiao/auto-pairs'
    Plug 'ctrlpvim/ctrlp.vim'
    Plug 'tacahiroy/ctrlp-funky'
    Plug 'airblade/vim-rooter'
    Plug 'terryma/vim-multiple-cursors'
    Plug 'vim-scripts/sessionman.vim'
    Plug 'vim-scripts/matchit.zip'
    Plug 'itchyny/lightline.vim'
    Plug 'maximbaz/lightline-ale'
    Plug 'bling/vim-bufferline'
    Plug 'jistr/vim-nerdtree-tabs'
    Plug 'mbbill/undotree'
    Plug 'nathanaelkane/vim-indent-guides'
    Plug 'mhinz/vim-signify'
    Plug 'tpope/vim-abolish'
    Plug 'osyo-manga/vim-over'
    Plug 'kana/vim-textobj-user'     
    Plug 'gcmt/wildfire.vim'
" }

" Writing {
    Plug 'reedes/vim-litecorrect'
    Plug 'reedes/vim-textobj-sentence'
    Plug 'reedes/vim-textobj-quote'
    Plug 'reedes/vim-wordy'
    Plug 'tpope/vim-markdown'
    Plug 'greyblake/vim-preview'
" }

" General Programming {
    " Pick one of the checksyntax, jslint, or syntastic
    Plug 'w0rp/ALE'
    Plug 'tpope/vim-fugitive'
    Plug 'mattn/webapi-vim'
    Plug 'mattn/gist-vim'
    Plug 'tpope/vim-commentary'
    Plug 'luochen1990/rainbow'
    if executable('ctags')
        Plug 'majutsushi/tagbar'
    endif
" }

" Snippets & AutoComplete {
    " TODO
" }

" Python {
    " Pick either python-mode or pyflakes & pydoc
    Plug 'yssource/python.vim'
    Plug 'vim-scripts/python_match.vim'
    Plug 'vim-scripts/pythoncomplete'
" }

" Javascript {
    Plug 'elzr/vim-json'
    Plug 'groenewege/vim-less'
    Plug 'pangloss/vim-javascript'
    Plug 'briancollins/vim-jst'
    Plug 'kchmck/vim-coffee-script'
" }

" Scala {
    Plug 'derekwyatt/vim-scala'
    Plug 'derekwyatt/vim-sbt'
" }

" Haskell {
    Plug 'travitch/hasksyn'
    Plug 'dag/vim2hs'
    Plug 'Twinside/vim-haskellConceal'
    Plug 'Twinside/vim-haskellFold'
    Plug 'lukerandall/haskellmode-vim'
    Plug 'eagletmt/neco-ghc'
    Plug 'eagletmt/ghcmod-vim'
    Plug 'Shougo/vimproc.vim'
    Plug 'adinapoli/cumino'
    Plug 'bitc/vim-hdevtools'
" }

" HTML {
    Plug 'vim-scripts/HTML-AutoCloseTag'
    Plug 'hail2u/vim-css3-syntax'
    Plug 'gorodinskiy/vim-coloresque'
    Plug 'tpope/vim-haml'
" }

" Ruby {
    Plug 'tpope/vim-rails'
    Plug 'tpope/vim-cucumber'
    Plug 'quentindecock/vim-cucumber-align-pipes'
    let g:rubycomplete_buffer_loading = 1
    "let g:rubycomplete_classes_in_global = 1
    "let g:rubycomplete_rails = 1
" }

" Go Lang {
    "Plug 'Blackrush/vim-gocode'
    Plug 'fatih/vim-go'
" }


" Rust {
    Plug 'rust-lang/rust.vim'
" }

" Misc {
    Plug 'cespare/vim-toml'
    Plug 'saltstack/salt-vim'
    Plug 'iamcco/markdown-preview.vim'
" }

call plug#end()
